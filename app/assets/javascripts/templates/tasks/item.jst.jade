//--
//- @param {string} name Icon name.
//- @param {string} [options.class] Class names separated by spaces.
//- @see http://fontawesome.io/icons/
mixin fa_icon(name, options)
	- options = options || {}
	i.fa(class="fa-#{name} #{options.class||''}")

//--
//- A task item which can include child tasks.
//- @param {object} task A task data.
mixin item(task)
	div.task-item.js-taskItem.is-task-opened(class="#{task.working ? 'is-working' : ''}")

		div.task-item-body.js-task-body
			button.btn-text.task-item-toggle.js-task-toggle
				+fa_icon('plus-square-o', { class: 'task-item-toggle-open' })
				+fa_icon('minus-square-o', { class: 'task-item-toggle-close' })
			span.btn-link.task-item-name.js-task-work
				= task.name
				+fa_icon('play-circle', { class: 'task-item-startIcon'})
				+fa_icon('stop-circle', { class: 'task-item-stopIcon'})
			a.task-item-times(href="/tasks/#{task.id}")
				| (#{task.total_spent_time}/#{task.total_necessary_time}min)
			button.btn-icon.task-item-button.task-item-edit.js-task-edit
				+fa_icon('pencil-square-o')
			button.btn-icon.task-item-button.task-item-add.js-addChildTask
				+fa_icon('plus')

		//- div.task-item-formEdit
			= render 'form', task: task

		div.task-item-children
			- each child in task.children
				+item(child)

		//- div.task-item-formAddChild
			= render 'form', task: task.new

		+start_form(task)
		+stop_form(task)

//--
//- Form to start working
//- @param {object} task A task data.
mixin start_form(task)
	form.js-task-formStart(action="/tasks/#{task.id}/start", accept-charset="UTF-8", method="post", data-remote="true")
		input(name="_method", value="patch", type="hidden")

//--
//- Form to start working
//- @param {object} task A task data.
mixin stop_form(task)
	form.js-task-formStop(action="/tasks/#{task.id}/stop", accept-charset="UTF-8", method="post", data-remote="true")
		input(name="_method", value="patch", type="hidden")

//--------------------------------

+item(task)
